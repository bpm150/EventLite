version: '3.4'

networks:
  frontend:
  backend:

services:
  event_catalog_api_SVC:
    build:
      context: .\EventCatalogApi
      dockerfile: Dockerfile
    image: event_catalog_api_img
    environment:
      DatabaseServer: event_mssqlserver_SVC
      DatabaseName: EventLiteCatalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ExternalCatalogBaseUrl: http://localhost:5678
    ports:
      - "5678:80"
    container_name: event_catalog_api_CNTR
    networks:
      - backend
      - frontend
    depends_on:
      - event_mssqlserver_SVC


      
  event_cart_api_SVC:
    build:
      context: .\EventCartApi
      dockerfile: Dockerfile
    image: event_cart_api_img
    environment:
      IdentityUrl: http://192.168.192.49:6789
      ConnectionString: event_basket_data_SVC
    ports:
      - "8910:80"
    container_name: event_cart_api_CNTR
    networks:
      - backend
      - frontend
    depends_on:
      - event_basket_data_SVC
      - event_token_server_SVC
      - event_rabbitmq_msg_SVC

  event_order_api_SVC:
    build:
      context: .\EventOrderApi
      dockerfile: Dockerfile
    image: event_order_api_img
    logging: # turn on logging
      driver: "json-file" #json is common...could use event log but win only (not on our linux containers)
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.192.49:6789
      DatabaseServer: event_mssqlserver_SVC
      DatabaseName: EventLiteOrdersDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "8999:80"
    container_name: event_order_api_CNTR
    networks:
      - backend
      - frontend
    depends_on:
      - event_mssqlserver_SVC
      - event_token_server_SVC
      - event_rabbitmq_msg_SVC #bunny dependency



  event_mssqlserver_SVC:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1440:1433"
    container_name: event_mssqlserver_CNTR
    networks:
      - backend

  event_token_server_SVC:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: event_token_server_img
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:1337
    ports:
      - "6789:80"
    container_name: event_token_server_CNTR
    networks:
      - backend
      - frontend
    depends_on:
      - event_mssqlserver_SVC


  event_webmvc_SVC:
    build:
      context: .\WebMVC
      dockerfile: Dockerfile
    image: event_webmvc_img
    environment:
      EventCatalogApiUrl: http://event_catalog_api_SVC
      IdentityUrl: http://192.168.192.49:6789
      CallBackUrl: http://localhost:1337
      CartUrl: http://event_cart_api_SVC
      OrderUrl: http://event_order_api_SVC
      StripePublicKey: pk_test_3cOXtVRvsfqBNqFZAwDJYyQ800F3cp9IV3 # PASTED FROM STRIPE Api keys page
      StripePrivateKey: sk_test_opUkxPdEdTbc2FHdcAK6zOUH00CTFhHlGY # PASTED FROM STRIPE Api keys page
      ASPNETCORE_ENVIRONMENT: Development
    ports:
     - "1337:80"
    container_name: event_webmvc_CNTR
    networks:
      - frontend
    depends_on:
      - event_catalog_api_SVC
      - event_cart_api_SVC
      - event_token_server_SVC
      - event_order_api_SVC

  event_basket_data_SVC:
    image: redis
    container_name: event_basket_data_CNTR
    ports:
      - "5704:6379"
    networks:
      - backend

  event_rabbitmq_msg_SVC:
    image: rabbitmq:3-management
    container_name: rabbitmq_msg_CNTR
    hostname: myrabbitmq
    ports: # same ports ok to use...but that didn't work: Cannot start service event_rabbitmq_msg_SVC: driver failed programming external connectivity on endpoint rabbitmq_msg_CNTR ...... failed: port is already allocated If the error persists, try restarting Docker Desktop.	
      - "19672:15672"
      - "5972:5672"
      - "5971:5671" # so I changed them a bit anyway
    volumes: # copies to local volume, can try removing this if you want
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia    # where can download the image to drop folder on the container like C:\
    networks:
      - backend 