@using Microsoft.AspNetCore.Identity
@using WebMVC.Services
@using WebMVC.Models


<!-- Added while integrating CartApi into WebMVC -->
@inject IIdentityService<ApplicationUser> UserManager



@if (User.FindFirst(x => x.Type == "preferred_username") != null)
{

    <section class="col-lg-4 col-md-5 col-xs-12">
        <div class="esh-identity">
            <form asp-area="" asp-controller="Account" asp-action="SignOut" method="post" id="logoutForm" class="navbar-right">
                <section class="esh-identity-section">

                    <div class="esh-identity-name">@User.FindFirst(x => x.Type == "preferred_username").Value</div>
                    @*<div class="esh-identity-name">@User.Identity.Name</div>*@
                    <img class="esh-identity-image" src="~/images/arrow-down.png">
                </section>

                <section class="esh-identity-drop">





                    <a class="esh-identity-item"
                       href="javascript:document.getElementById('logoutForm').submit()">

                        <div class="esh-identity-name esh-identity-name--upper">Log Out</div>
                        <img class="esh-identity-image" src="~/images/logout.png">
                    </a>
                </section>
            </form>
        </div>
    </section>

    <section class="col-lg-1 col-xs-12">
        <!-- Added while integrating CartApi into WebMVC -->
        <!-- This is where you're invoking the component -->
        <!-- Code is in ViewComponents\CartVC.cs -->
        <!-- cshtml that goes to the code in Views\Shared\Components\CartVC\Default.cshtml -->
        @await Component.InvokeAsync("CartVC", new { user = UserManager.Get(User) })
        <!--  Invoke the "CartVC" component. That component needs this parameter... public async Task<IViewComponentResult> CartVC.InvokeAsync(ApplicationUser user)-->
        <!-- User represents the current logged-in user (it's a ClaimsPrincipal)...we pass that to the IIdentityService.Get method, and that gives us the ApplicationUser that we need to pass to CartVC's InvokeAsync method -->
    </section>

}
else
{
    <section class="col-lg-4 col-md-5 col-xs-12">
        <div class="esh-identity">
            <section class="esh-identity-section">
                <div class="esh-identity-item">

                    <a asp-area="" asp-controller="Account" asp-action="SignIn" class="esh-identity-name esh-identity-name--upper">
                        Login
                    </a>
                </div>
            </section>
        </div>
    </section>

    <section class="col-lg-1 col-xs-12"></section>
}