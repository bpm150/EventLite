using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

// For Key
using System.ComponentModel.DataAnnotations;

// For DatabaseGenerated
using System.ComponentModel.DataAnnotations.Schema;

namespace EventOrderApi.Models
{
    // Order is like a cart
    // has an id and a bunch of info about the user
    public class Order
    {
        // "Do this through attribution"

        // Attributes (DataAnnotations) is an alternative to
        // the OnModelCreating method and ModelBuilder.Entity<>
        // lambda statements that we did when we were configuring
        // tables for EF in the Catalog Api
        // "Don't need to write a context file, can do this with attributes"

        [Key] // This OrderId property is marked as a primary key
        // UseHiLo is automatic for primary key

        // DatabaseGenerated makes OrderId an autogenerated column
        // value for this column autogenerated by the db
        // Identity means that it needs to be unique

            // Now head over to OrderItem constructor
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int OrderId { get; set; }




        public string FirstName { get; set; }
        public string LastName { get; set; }
        public DateTime OrderDate { get; set; }

        // Unique id of the buyer (their email)
        public string BuyerId { get; set; }

        public string UserName { get; set; }

        public OrderStatus OrderStatus { get; set; }

        public string Address { get; set; }

        // For when integrate microservice with Stripe payment gateway
        public string PaymentAuthCode { get; set; }
        // public Guid RequestId { get;  set; }
        public decimal OrderTotal { get; set; }
        public IEnumerable<OrderItem> OrderItems { get; set; }

        // Was protected in Kal's example, but only for demonstration purposes
        // Private is better design here
        private Order()
        {
            OrderItems = new List<OrderItem>();
        }
    }
    public enum OrderStatus
    {
        Preparing = 1,
        Shipped = 2,
        Delivered = 3,
    }

}
